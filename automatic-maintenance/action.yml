name: "Automatic maintenance"
description: "Performs automatic maintenance tasks on my repositories."
author: "Fardjad Davari"
inputs:
  script-base-path:
    description: "The base path to the scripts."
    default: ".github/automatic-maintenance"
    # what's expected in the base-path
    # - check -> Check if the repository needs maintenance. If so, it should exit with a non-zero status code.
    # - action -> Perform the maintenance tasks, create a branch, and commit the changes.
  github-token:
    description: "The GitHub PAT to use for creating, approving, and merging the PR with the changes."
  target-branch:
    description: "The branch to merge the changes into."
    default: "${{ github.head_ref || github.ref_name }}"
outputs:
  maintenance-needed:
    description: "A boolean indicating whether the repository needed maintenance."
    value: ${{ steps.execute.outputs.maintenance-needed }}
  commit-message:
    description: "The output of the commit script."
    value: ${{ steps.execute.outputs.commit-message }}
runs:
  using: "composite"
  steps:
    - uses: fardjad/my-actions/configure-git@main
    - id: check
      shell: bash
      run: |
        if ./${{ inputs.script-base-path }}/check; then
          echo "maintenance-needed=false" >> $GITHUB_OUTPUT
          exit 0
        fi

        echo "maintenance-needed=true" >> $GITHUB_OUTPUT
    - id: action
      if: steps.check.outputs.maintenance-needed
      shell: bash
      run: |
        set -euo pipefail

        PREVIOUS_COMMIT_HASH="$(git rev-parse HEAD)"

        ./${{ inputs.script-base-path }}/action

        CURRENT_COMMIT_HASH="$(git rev-parse HEAD)"

        if [ "$PREVIOUS_COMMIT_HASH" = "$CURRENT_COMMIT_HASH" ]; then
          echo "::warning:: No changes were made."
          exit 0
        fi

        echo "should-merge=true" >> $GITHUB_OUTPUT

        COMMIT_MESSAGE="$(git log -1 --pretty=format:%B)"
        TITLE="$(echo "$COMMIT_MESSAGE" | head -n 1)"
        BODY="$(echo "$COMMIT_MESSAGE" | tail -n +3)"

        echo "pr-title=$TITLE" >> $GITHUB_OUTPUT
        echo "pr-body=$BODY" >> $GITHUB_OUTPUT
        echo "source-branch=$(git rev-parse --abbrev-ref HEAD)" >> $GITHUB_OUTPUT
    - id: merge
      if: steps.action.outputs.should-merge
      uses: fardjad/my-actions/merge-commits@main
      with:
        github-token: ${{ inputs.github-token }}
        source-branch: "${{ steps.action.outputs.source-branch }}"
        target-branch: "${{ inputs.target-branch }}"
        pr-title: "${{ steps.action.outputs.pr-title }}"
        pr-body: "${{ steps.action.outputs.pr-body }}"
