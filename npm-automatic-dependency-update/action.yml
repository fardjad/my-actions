name: "NPM Automatic Dependency Update (Deprecated)"
description: "Performs automatic dependency updates for Node.js projects using npm-check-updates."
author: "Fardjad Davari"
inputs:
  dependency-install-script:
    description: "The script to run to install the dependencies. By default, it runs 'npm install' followed by 'npm audit fix'."
    default: ""
  ncu-check-extra-flags:
    description: "The flags to pass to npm-check-updates to check if updates are available. '--errorLevel 2' will always be added to the flags."
    default: ""
  source-branch:
    description: "The branch to create the PR from."
    default: "upgrade-dependencies"
  ncu-upgrade-extra-flags:
    description: "The flags to pass to npm-check-updates to upgrade the dependencies. '--upgrade' and '--jsonUpgraded' will always be added to the flags."
    default: ""
  post-upgrade-hook-script:
    description: "The script to run after upgrading the dependencies. This can be used to run the tests or bump the package version. By default it runs 'npm test' and 'npm version patch --no-git-tag-version'."
    default: ""
  commit-message-preprocessor-script:
    description: "The script to run to preprocess the commit message. By default the commit message will be Upgrade dependencies followed by the list of upgraded dependencies."
    default: ""
  target-branch:
    description: "The branch to merge the changes into."
    default: "${{ github.head_ref || github.ref_name }}"
  github-token:
    description: "The GitHub PAT to use for creating, approving, and merging the PR with the changes."
    required: true
outputs: {}
runs:
  using: "composite"
  steps:
    - name: Check the requirements
      shell: bash
      run: |
        set -euo pipefail

        for cmd in node npm npx; do
          if ! command -v $cmd &> /dev/null; then
            echo "::error:: $cmd is not installed. Make sure to run actions/setup-node action before this action."
            exit 0
          fi
        done
    - name: Install the dependencies
      shell: bash
      run: ${{ github.action_path }}/scripts/install-dependencies
      env:
        DEPENDENCY_INSTALL_SCRIPT: ${{ inputs.dependency-install-script }}
    - name: Ensure npm-check-updates is installed
      shell: bash
      run: |
        set -euo pipefail

        if ! npm list --depth=0 --json | jq --exit-status '.dependencies["npm-check-updates"]' &> /dev/null; then
          echo "::warning:: npm-check-updates is not installed in the project. Installing it globally."
          npm install -g npm-check-updates
        fi
    - name: Check for updates
      id: check
      shell: bash
      run: |
        set -euo pipefail

        if npx npm-check-updates ${{ inputs.ncu-check-extra-flags }} --errorLevel 2; then
          echo "upgrade-needed=false" >> $GITHUB_OUTPUT
          exit 0
        fi

        echo "upgrade-needed=true" >> $GITHUB_OUTPUT
    - name: Configure Git
      if: steps.check.outputs.upgrade-needed == 'true'
      uses: fardjad/my-actions/configure-git@main
    - name: Upgrade the dependencies
      id: upgrade
      shell: bash
      if: steps.check.outputs.upgrade-needed == 'true'
      run: |
        set -euo pipefail

        previous_commit_hash="$(git rev-parse HEAD)"

        git checkout -b "${{ inputs.source-branch }}"

        upgraded="$(npx ncu ${{ inputs.ncu-upgrade-extra-flags }} -u --jsonUpgraded)"

        ${{ github.action_path }}/scripts/install-dependencies

        if [ -n "${{ inputs.post-upgrade-hook-script }}" ]; then
          "${{ inputs.post-upgrade-hook-script }}"
        else
          "${{ github.action_path }}/scripts/post-upgrade-hook"
        fi

        commit_message_title="Upgrade dependencies"
        commit_message_body="${upgraded}"
        commit_message="${commit_message_title}"$'\n\n'"${commit_message_body}"

        if [ -n "${{ inputs.commit-message-preprocessor-script }}" ]; then
          commit_message="$(echo "${commit_message}" | "${{ inputs.commit-message-preprocessor-script }}")"
        else
          commit_message="$(echo "${commit_message}" | "${{ github.action_path }}/scripts/commit-message-preprocessor.mjs")"
        fi

        git add -u .
        git commit -m "${commit_message}"

        current_commit_hash="$(git rev-parse HEAD)"

        if [ "${previous_commit_hash}" = "${current_commit_hash}" ]; then
          echo "::warning:: No changes were made."
          exit 0
        fi

        echo "should-merge=true" >> "${GITHUB_OUTPUT}"
      env:
        DEPENDENCY_INSTALL_SCRIPT: ${{ inputs.dependency-install-script }}
    - name: Apply the changes
      if: steps.upgrade.outputs.should-merge == 'true'
      uses: fardjad/my-actions/merge-commits@main
      with:
        github-token: ${{ inputs.github-token }}
        source-branch: ${{ inputs.source-branch }}
        target-branch: ${{ inputs.target-branch }}
