name: "Merge Commits"
description: >-
  This action merges commits from a source branch into a target branch by 
  automatically creating and approving a pull request.
author: "Fardjad Davari"
inputs:
  source-branch:
    description: "The name of the branch to merge the commits from."
    required: true
  target-branch:
    description: "The name of the branch to merge the commits into."
    default: ${{ github.head_ref || github.ref_name }}
  github-token:
    description: >-
      The GitHub Personal Access Token to use for creating, approving, and 
      merging the pull request.
    default: ${{ github.token }}
outputs: {}
runs:
  using: "composite"
  steps:
    - id: create-pr
      shell: bash
      run: |
        REMOTE_REPO="https://${GITHUB_ACTOR}:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git"

        if git ls-remote --exit-code --heads "${REMOTE_REPO}" "${{ inputs.source-branch }}" > /dev/null; then
          echo "::warning:: PR already exists."
          exit 0
        fi

        git push "${REMOTE_REPO}" "HEAD:${{ inputs.source-branch }}"

        PR_URL=$(gh pr create -B "${{ inputs.target-branch }}" -H "${{ inputs.source-branch }}" -f)
        echo "pr-url=${PR_URL}" >> $GITHUB_OUTPUT
      env:
        GH_TOKEN: ${{ github.token }}
    - id: approve-and-merge-pr
      if: steps.create-pr.outputs.pr-url
      shell: bash
      run: |
        gh pr review --approve "${PR_URL}"
        gh pr merge --auto --delete-branch --rebase "${PR_URL}"
      env:
        GH_TOKEN: ${{ inputs.github-token }}
        PR_URL: ${{ steps.create-pr.outputs.pr-url }}
